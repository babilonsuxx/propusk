{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","handleSeriaChange","before","photo_200","src","description","city","title","first_name","last_name","top","placeholder","value","type","onChange","defaultValue","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","input","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.116fab4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport { FormLayout, FormLayoutGroup, Input, Select } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser,handleSeriaChange }) => (\n\n\t<Panel id={id}>\n\n\t\t{fetchedUser &&\n\t\t\t<Group>\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>}\n\t\t<Group>\n\t\t\t<Cell>\n\t\t\twant smoke\n\t\t\t\t</Cell>\n\n\t\t</Group>\n\n\t\t<Group>\n\t\t\t<FormLayout>\n\t\t\t\t<FormLayoutGroup top=\"Цель получения пропуска:\">\n\t\t\t\t\t<Select placeholder=\"работа/мед.организация/другое\" id=\"target\">\n\t\t\t\t\t\t<option value=\"1\">Цифровой пропуск для работающих</option>\n\t\t\t\t\t\t<option value=\"2\">Разовая поездка для посещения медицинской организации</option>\n\t\t\t\t\t\t<option value=\"3\">Разовая поездка в иных целях</option>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\n\t\t\t<FormLayout>\n\t\t\t\t<FormLayoutGroup top=\"Тип документа, удостоверяющего личность:\">\n\t\t\t\t\t<Select placeholder=\"Паспорт/загран/другое..\">\n\t\t\t\t\t\t<option value=\"1\">Паспорт гражданина РФ</option>\n\t\t\t\t\t\t<option value=\"2\">Иностранный паспорт </option>\n\t\t\t\t\t\t<option value=\"3\">Иной документ</option>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\n\t\t\t<FormLayout>\n\t\t\t\t<FormLayoutGroup top=\"Тип документа, удостоверяющего личность:\">\n\t\t\t\t\t<Select placeholder=\"Паспорт/загран/другое..\">\n\t\t\t\t\t\t<option value=\"1\">Паспорт гражданина РФ</option>\n\t\t\t\t\t\t<option value=\"2\">Иностранный паспорт</option>\n\t\t\t\t\t\t<option value=\"3\">Иной документ</option>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\n\t\t\t<FormLayout>\n\t\t\t\t<FormLayoutGroup top=\"Серия документа, удостоверяющего личность:\">\n\t\t\t\t\t<Input type=\"text\"  onChange={handleSeriaChange}  value=\"sdf\"/>\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\n\t\t\t<FormLayout>\n\t\t\t\t<FormLayoutGroup top=\"Номер документа, удостоверяющего личность:\">\n\t\t\t\t\t<Input type=\"text\" defaultValue=\"\" />\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\n\t\t\t<FormLayout>\n\t\t\t\t<FormLayoutGroup top=\"Номер транспортного средства (если используется):\">\n\t\t\t\t\t<Input type=\"text\" defaultValue=\"\" />\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\t\t\t<FormLayout>\n\n\t\t\t\t<FormLayoutGroup top=\"Номер карты «Тройка» (если есть):\">\n\t\t\t\t\t<Input type=\"text\" defaultValue=\"\" />\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\t\t\t<FormLayout>\n\n\t\t\t\t<FormLayoutGroup top=\"Номер карты «Стрелка» (если есть):\">\n\t\t\t\t\t<Input type=\"text\" defaultValue=\"\" />\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\t\t\t<FormLayout>\n\n\t\t\t\t<FormLayoutGroup top=\"ИНН организации:\">\n\t\t\t\t\t<Input type=\"text\" defaultValue=\"\" />\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\t\t\t<FormLayout>\n\n\t\t\t\t<FormLayoutGroup top=\"краткое наименование организации:\">\n\t\t\t\t\t<Input type=\"text\" defaultValue=\"\" />\n\t\t\t\t</FormLayoutGroup>\n\t\t\t</FormLayout>\n\n\n\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tСкопировать\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\thandleSeriaChange: PropTypes.func.isRequired,\n\t\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t})\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\tconst handleSeriaChange = e => {\n\t\tlet input=e.currentTarget;\n\t\t//input.setState({login: input.login});\n\t\tconsole.log(input.value);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} handleSeriaChange={handleSeriaChange} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}